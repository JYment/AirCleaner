
TX_RX.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a6  00800100  0000087c  00000910  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000087c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000040  008001a6  008001a6  000009b6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000a54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bbb  00000000  00000000  00000abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000093b  00000000  00000000  00001677  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004b1  00000000  00000000  00001fb2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00002464  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f0  00000000  00000000  000025dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000410  00000000  00000000  00002acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002edc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	5b c0       	rjmp	.+182    	; 0x100 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e7       	ldi	r30, 0x7C	; 124
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 3a       	cpi	r26, 0xA6	; 166
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 ea       	ldi	r26, 0xA6	; 166
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a6 3e       	cpi	r26, 0xE6	; 230
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	eb d0       	rcall	.+470    	; 0x29a <main>
  c4:	d9 c3       	rjmp	.+1970   	; 0x878 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <tx0_char>:
	UBRR0L = 103;		//9600
}

void device_init(void)
{
	uart_init();
  c8:	5d 9b       	sbis	0x0b, 5	; 11
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <tx0_char>
  cc:	8c b9       	out	0x0c, r24	; 12
  ce:	08 95       	ret

000000d0 <tx0_str>:
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	ec 01       	movw	r28, r24
  d6:	88 81       	ld	r24, Y
  d8:	88 23       	and	r24, r24
  da:	29 f0       	breq	.+10     	; 0xe6 <tx0_str+0x16>
  dc:	21 96       	adiw	r28, 0x01	; 1
  de:	f4 df       	rcall	.-24     	; 0xc8 <tx0_char>
  e0:	89 91       	ld	r24, Y+
  e2:	81 11       	cpse	r24, r1
  e4:	fc cf       	rjmp	.-8      	; 0xde <tx0_str+0xe>
  e6:	df 91       	pop	r29
  e8:	cf 91       	pop	r28
  ea:	08 95       	ret

000000ec <uart_init>:
  ec:	88 e9       	ldi	r24, 0x98	; 152
  ee:	8a b9       	out	0x0a, r24	; 10
  f0:	86 e0       	ldi	r24, 0x06	; 6
  f2:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
  f6:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
  fa:	87 e6       	ldi	r24, 0x67	; 103
  fc:	89 b9       	out	0x09, r24	; 9
  fe:	08 95       	ret

00000100 <__vector_18>:
}

ISR(USART0_RX_vect)
{
 100:	1f 92       	push	r1
 102:	0f 92       	push	r0
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	0f 92       	push	r0
 108:	11 24       	eor	r1, r1
 10a:	0b b6       	in	r0, 0x3b	; 59
 10c:	0f 92       	push	r0
 10e:	2f 93       	push	r18
 110:	3f 93       	push	r19
 112:	4f 93       	push	r20
 114:	5f 93       	push	r21
 116:	8f 93       	push	r24
 118:	9f 93       	push	r25
 11a:	af 93       	push	r26
 11c:	bf 93       	push	r27
 11e:	ef 93       	push	r30
 120:	ff 93       	push	r31
	int i;
	char rxdata;
	rxdata = UDR0;
 122:	8c b1       	in	r24, 0x0c	; 12
	if(!rx_flag)
 124:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <__data_end>
 128:	91 11       	cpse	r25, r1
 12a:	30 c0       	rjmp	.+96     	; 0x18c <__vector_18+0x8c>
	{
		if(rxdata == STX)
 12c:	8f 35       	cpi	r24, 0x5F	; 95
 12e:	19 f4       	brne	.+6      	; 0x136 <__vector_18+0x36>
		{
			rx_cnt = 0;
 130:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <rx_cnt>
 134:	2b c0       	rjmp	.+86     	; 0x18c <__vector_18+0x8c>
		}
		else if(rxdata == ETX)
 136:	8f 32       	cpi	r24, 0x2F	; 47
 138:	e9 f4       	brne	.+58     	; 0x174 <__vector_18+0x74>
		{
			for(i=0; (i<rx_cnt) && (i < 6); i++)
 13a:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <rx_cnt>
 13e:	88 23       	and	r24, r24
 140:	99 f0       	breq	.+38     	; 0x168 <__vector_18+0x68>
 142:	e2 ed       	ldi	r30, 0xD2	; 210
 144:	f1 e0       	ldi	r31, 0x01	; 1
 146:	ac eb       	ldi	r26, 0xBC	; 188
 148:	b1 e0       	ldi	r27, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	8e 52       	subi	r24, 0x2E	; 46
 14e:	9e 4f       	sbci	r25, 0xFE	; 254
 150:	48 ed       	ldi	r20, 0xD8	; 216
 152:	51 e0       	ldi	r21, 0x01	; 1
			{
				tx_buf[i] = rx_buf[i];
				rx_buf[i] = ' ';
 154:	30 e2       	ldi	r19, 0x20	; 32
		}
		else if(rxdata == ETX)
		{
			for(i=0; (i<rx_cnt) && (i < 6); i++)
			{
				tx_buf[i] = rx_buf[i];
 156:	2c 91       	ld	r18, X
 158:	21 93       	st	Z+, r18
				rx_buf[i] = ' ';
 15a:	3d 93       	st	X+, r19
		{
			rx_cnt = 0;
		}
		else if(rxdata == ETX)
		{
			for(i=0; (i<rx_cnt) && (i < 6); i++)
 15c:	e8 17       	cp	r30, r24
 15e:	f9 07       	cpc	r31, r25
 160:	19 f0       	breq	.+6      	; 0x168 <__vector_18+0x68>
 162:	e4 17       	cp	r30, r20
 164:	f5 07       	cpc	r31, r21
 166:	b9 f7       	brne	.-18     	; 0x156 <__vector_18+0x56>
			{
				tx_buf[i] = rx_buf[i];
				rx_buf[i] = ' ';
			}
			rx_cnt = 0;
 168:	10 92 a7 01 	sts	0x01A7, r1	; 0x8001a7 <rx_cnt>
			rx_flag = 1;
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__data_end>
 172:	0c c0       	rjmp	.+24     	; 0x18c <__vector_18+0x8c>
		}
		else
		{
			if(rx_cnt < 10)
 174:	90 91 a7 01 	lds	r25, 0x01A7	; 0x8001a7 <rx_cnt>
 178:	9a 30       	cpi	r25, 0x0A	; 10
 17a:	40 f4       	brcc	.+16     	; 0x18c <__vector_18+0x8c>
			{
				rx_buf[rx_cnt] = rxdata;
 17c:	e9 2f       	mov	r30, r25
 17e:	f0 e0       	ldi	r31, 0x00	; 0
 180:	e4 54       	subi	r30, 0x44	; 68
 182:	fe 4f       	sbci	r31, 0xFE	; 254
 184:	80 83       	st	Z, r24
				rx_cnt++;
 186:	9f 5f       	subi	r25, 0xFF	; 255
 188:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <rx_cnt>
			}
		}
	}
}
 18c:	ff 91       	pop	r31
 18e:	ef 91       	pop	r30
 190:	bf 91       	pop	r27
 192:	af 91       	pop	r26
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	5f 91       	pop	r21
 19a:	4f 91       	pop	r20
 19c:	3f 91       	pop	r19
 19e:	2f 91       	pop	r18
 1a0:	0f 90       	pop	r0
 1a2:	0b be       	out	0x3b, r0	; 59
 1a4:	0f 90       	pop	r0
 1a6:	0f be       	out	0x3f, r0	; 63
 1a8:	0f 90       	pop	r0
 1aa:	1f 90       	pop	r1
 1ac:	18 95       	reti

000001ae <adc_init>:

void adc_init(void)
{
	ADMUX = (1 << REFS0);
 1ae:	80 e4       	ldi	r24, 0x40	; 64
 1b0:	87 b9       	out	0x07, r24	; 7
	ADCSRA = (1 << ADEN) | (7 << ADPS0);
 1b2:	87 e8       	ldi	r24, 0x87	; 135
 1b4:	86 b9       	out	0x06, r24	; 6
 1b6:	08 95       	ret

000001b8 <adc_read>:
}

unsigned int adc_read(char adc_pin)
{
	ADMUX |= (adc_pin & 0x0F);
 1b8:	97 b1       	in	r25, 0x07	; 7
 1ba:	8f 70       	andi	r24, 0x0F	; 15
 1bc:	98 2b       	or	r25, r24
 1be:	97 b9       	out	0x07, r25	; 7
	ADCSRA |= (1 << ADSC);
 1c0:	36 9a       	sbi	0x06, 6	; 6
	while((ADCSRA & (1 << ADSC)));
 1c2:	36 99       	sbic	0x06, 6	; 6
 1c4:	fe cf       	rjmp	.-4      	; 0x1c2 <adc_read+0xa>
	
	return ADC;
 1c6:	84 b1       	in	r24, 0x04	; 4
 1c8:	95 b1       	in	r25, 0x05	; 5
}
 1ca:	08 95       	ret

000001cc <ntc_measure>:

void ntc_measure(unsigned int val)
{
 1cc:	8f 92       	push	r8
 1ce:	9f 92       	push	r9
 1d0:	af 92       	push	r10
 1d2:	bf 92       	push	r11
 1d4:	cf 92       	push	r12
 1d6:	df 92       	push	r13
 1d8:	ef 92       	push	r14
 1da:	ff 92       	push	r15
 1dc:	0f 93       	push	r16
 1de:	1f 93       	push	r17
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	7c 01       	movw	r14, r24
 1e6:	c0 e0       	ldi	r28, 0x00	; 0
 1e8:	d1 e0       	ldi	r29, 0x01	; 1
 1ea:	0f 2e       	mov	r0, r31
 1ec:	f2 ea       	ldi	r31, 0xA2	; 162
 1ee:	8f 2e       	mov	r8, r31
 1f0:	f1 e0       	ldi	r31, 0x01	; 1
 1f2:	9f 2e       	mov	r9, r31
 1f4:	f0 2d       	mov	r31, r0
 1f6:	02 ee       	ldi	r16, 0xE2	; 226
 1f8:	1f ef       	ldi	r17, 0xFF	; 255
				sprintf(temp, "%d\n", result);
				tx0_str(temp);
			}
			else
			{
				sprintf(temp, "%d\n", abs(result));
 1fa:	0f 2e       	mov	r0, r31
 1fc:	f2 ea       	ldi	r31, 0xA2	; 162
 1fe:	af 2e       	mov	r10, r31
 200:	f1 e0       	ldi	r31, 0x01	; 1
 202:	bf 2e       	mov	r11, r31
 204:	f0 2d       	mov	r31, r0
 206:	0f 2e       	mov	r0, r31
 208:	f8 ea       	ldi	r31, 0xA8	; 168
 20a:	cf 2e       	mov	r12, r31
 20c:	f1 e0       	ldi	r31, 0x01	; 1
 20e:	df 2e       	mov	r13, r31
 210:	f0 2d       	mov	r31, r0
{
	uint8_t a = 0;
	int result = 0;
	for(a=0; a<81; a++)
	{
		if((val <= Temp_table[a]) && (val > Temp_table[a+1]))
 212:	89 91       	ld	r24, Y+
 214:	99 91       	ld	r25, Y+
 216:	8e 15       	cp	r24, r14
 218:	9f 05       	cpc	r25, r15
 21a:	68 f1       	brcs	.+90     	; 0x276 <ntc_measure+0xaa>
 21c:	88 81       	ld	r24, Y
 21e:	99 81       	ldd	r25, Y+1	; 0x01
 220:	8e 15       	cp	r24, r14
 222:	9f 05       	cpc	r25, r15
 224:	40 f5       	brcc	.+80     	; 0x276 <ntc_measure+0xaa>
		{
			result = a-30;
			if(result < 0)		
 226:	11 23       	and	r17, r17
 228:	84 f4       	brge	.+32     	; 0x24a <ntc_measure+0x7e>
			{
				sprintf(temp, "%d\n", result);
 22a:	1f 93       	push	r17
 22c:	0f 93       	push	r16
 22e:	bf 92       	push	r11
 230:	af 92       	push	r10
 232:	df 92       	push	r13
 234:	cf 92       	push	r12
 236:	45 d0       	rcall	.+138    	; 0x2c2 <sprintf>
				tx0_str(temp);
 238:	c6 01       	movw	r24, r12
 23a:	4a df       	rcall	.-364    	; 0xd0 <tx0_str>
 23c:	0f 90       	pop	r0
 23e:	0f 90       	pop	r0
 240:	0f 90       	pop	r0
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	16 c0       	rjmp	.+44     	; 0x276 <ntc_measure+0xaa>
			}
			else
			{
				sprintf(temp, "%d\n", abs(result));
 24a:	c8 01       	movw	r24, r16
 24c:	99 23       	and	r25, r25
 24e:	24 f4       	brge	.+8      	; 0x258 <ntc_measure+0x8c>
 250:	88 27       	eor	r24, r24
 252:	99 27       	eor	r25, r25
 254:	80 1b       	sub	r24, r16
 256:	91 0b       	sbc	r25, r17
 258:	9f 93       	push	r25
 25a:	8f 93       	push	r24
 25c:	bf 92       	push	r11
 25e:	af 92       	push	r10
 260:	df 92       	push	r13
 262:	cf 92       	push	r12
				tx0_str(temp);
 264:	2e d0       	rcall	.+92     	; 0x2c2 <sprintf>
 266:	c6 01       	movw	r24, r12
 268:	33 df       	rcall	.-410    	; 0xd0 <tx0_str>
 26a:	0f 90       	pop	r0
 26c:	0f 90       	pop	r0
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	0f 5f       	subi	r16, 0xFF	; 255
 278:	1f 4f       	sbci	r17, 0xFF	; 255

void ntc_measure(unsigned int val)
{
	uint8_t a = 0;
	int result = 0;
	for(a=0; a<81; a++)
 27a:	c8 15       	cp	r28, r8
 27c:	d9 05       	cpc	r29, r9
 27e:	49 f6       	brne	.-110    	; 0x212 <ntc_measure+0x46>
				sprintf(temp, "%d\n", abs(result));
				tx0_str(temp);
			}
		}
	}
}
 280:	df 91       	pop	r29
 282:	cf 91       	pop	r28
 284:	1f 91       	pop	r17
 286:	0f 91       	pop	r16
 288:	ff 90       	pop	r15
 28a:	ef 90       	pop	r14
 28c:	df 90       	pop	r13
 28e:	cf 90       	pop	r12
 290:	bf 90       	pop	r11
 292:	af 90       	pop	r10
 294:	9f 90       	pop	r9
 296:	8f 90       	pop	r8
 298:	08 95       	ret

0000029a <main>:
	UBRR0L = 103;		//9600
}

void device_init(void)
{
	uart_init();
 29a:	28 df       	rcall	.-432    	; 0xec <uart_init>


int main(void)
{
    device_init();
	adc_init();
 29c:	88 df       	rcall	.-240    	; 0x1ae <adc_init>
 29e:	78 94       	sei
	sei();
    while (1) 
    {
		data = adc_read(2);
 2a0:	82 e0       	ldi	r24, 0x02	; 2
 2a2:	8a df       	rcall	.-236    	; 0x1b8 <adc_read>
 2a4:	90 93 d1 01 	sts	0x01D1, r25	; 0x8001d1 <data+0x1>
 2a8:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <data>
		ntc_measure(data);
 2ac:	8f df       	rcall	.-226    	; 0x1cc <ntc_measure>
 2ae:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2b0:	81 ee       	ldi	r24, 0xE1	; 225
 2b2:	94 e0       	ldi	r25, 0x04	; 4
 2b4:	21 50       	subi	r18, 0x01	; 1
 2b6:	80 40       	sbci	r24, 0x00	; 0
 2b8:	90 40       	sbci	r25, 0x00	; 0
 2ba:	e1 f7       	brne	.-8      	; 0x2b4 <main+0x1a>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <main+0x24>
 2be:	00 00       	nop
 2c0:	ef cf       	rjmp	.-34     	; 0x2a0 <main+0x6>

000002c2 <sprintf>:
 2c2:	0f 93       	push	r16
 2c4:	1f 93       	push	r17
 2c6:	cf 93       	push	r28
 2c8:	df 93       	push	r29
 2ca:	cd b7       	in	r28, 0x3d	; 61
 2cc:	de b7       	in	r29, 0x3e	; 62
 2ce:	2e 97       	sbiw	r28, 0x0e	; 14
 2d0:	0f b6       	in	r0, 0x3f	; 63
 2d2:	f8 94       	cli
 2d4:	de bf       	out	0x3e, r29	; 62
 2d6:	0f be       	out	0x3f, r0	; 63
 2d8:	cd bf       	out	0x3d, r28	; 61
 2da:	0d 89       	ldd	r16, Y+21	; 0x15
 2dc:	1e 89       	ldd	r17, Y+22	; 0x16
 2de:	86 e0       	ldi	r24, 0x06	; 6
 2e0:	8c 83       	std	Y+4, r24	; 0x04
 2e2:	1a 83       	std	Y+2, r17	; 0x02
 2e4:	09 83       	std	Y+1, r16	; 0x01
 2e6:	8f ef       	ldi	r24, 0xFF	; 255
 2e8:	9f e7       	ldi	r25, 0x7F	; 127
 2ea:	9e 83       	std	Y+6, r25	; 0x06
 2ec:	8d 83       	std	Y+5, r24	; 0x05
 2ee:	ae 01       	movw	r20, r28
 2f0:	47 5e       	subi	r20, 0xE7	; 231
 2f2:	5f 4f       	sbci	r21, 0xFF	; 255
 2f4:	6f 89       	ldd	r22, Y+23	; 0x17
 2f6:	78 8d       	ldd	r23, Y+24	; 0x18
 2f8:	ce 01       	movw	r24, r28
 2fa:	01 96       	adiw	r24, 0x01	; 1
 2fc:	10 d0       	rcall	.+32     	; 0x31e <vfprintf>
 2fe:	ef 81       	ldd	r30, Y+7	; 0x07
 300:	f8 85       	ldd	r31, Y+8	; 0x08
 302:	e0 0f       	add	r30, r16
 304:	f1 1f       	adc	r31, r17
 306:	10 82       	st	Z, r1
 308:	2e 96       	adiw	r28, 0x0e	; 14
 30a:	0f b6       	in	r0, 0x3f	; 63
 30c:	f8 94       	cli
 30e:	de bf       	out	0x3e, r29	; 62
 310:	0f be       	out	0x3f, r0	; 63
 312:	cd bf       	out	0x3d, r28	; 61
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	0f 91       	pop	r16
 31c:	08 95       	ret

0000031e <vfprintf>:
 31e:	2f 92       	push	r2
 320:	3f 92       	push	r3
 322:	4f 92       	push	r4
 324:	5f 92       	push	r5
 326:	6f 92       	push	r6
 328:	7f 92       	push	r7
 32a:	8f 92       	push	r8
 32c:	9f 92       	push	r9
 32e:	af 92       	push	r10
 330:	bf 92       	push	r11
 332:	cf 92       	push	r12
 334:	df 92       	push	r13
 336:	ef 92       	push	r14
 338:	ff 92       	push	r15
 33a:	0f 93       	push	r16
 33c:	1f 93       	push	r17
 33e:	cf 93       	push	r28
 340:	df 93       	push	r29
 342:	cd b7       	in	r28, 0x3d	; 61
 344:	de b7       	in	r29, 0x3e	; 62
 346:	2b 97       	sbiw	r28, 0x0b	; 11
 348:	0f b6       	in	r0, 0x3f	; 63
 34a:	f8 94       	cli
 34c:	de bf       	out	0x3e, r29	; 62
 34e:	0f be       	out	0x3f, r0	; 63
 350:	cd bf       	out	0x3d, r28	; 61
 352:	6c 01       	movw	r12, r24
 354:	7b 01       	movw	r14, r22
 356:	8a 01       	movw	r16, r20
 358:	fc 01       	movw	r30, r24
 35a:	17 82       	std	Z+7, r1	; 0x07
 35c:	16 82       	std	Z+6, r1	; 0x06
 35e:	83 81       	ldd	r24, Z+3	; 0x03
 360:	81 ff       	sbrs	r24, 1
 362:	bf c1       	rjmp	.+894    	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
 364:	ce 01       	movw	r24, r28
 366:	01 96       	adiw	r24, 0x01	; 1
 368:	3c 01       	movw	r6, r24
 36a:	f6 01       	movw	r30, r12
 36c:	93 81       	ldd	r25, Z+3	; 0x03
 36e:	f7 01       	movw	r30, r14
 370:	93 fd       	sbrc	r25, 3
 372:	85 91       	lpm	r24, Z+
 374:	93 ff       	sbrs	r25, 3
 376:	81 91       	ld	r24, Z+
 378:	7f 01       	movw	r14, r30
 37a:	88 23       	and	r24, r24
 37c:	09 f4       	brne	.+2      	; 0x380 <vfprintf+0x62>
 37e:	ad c1       	rjmp	.+858    	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 380:	85 32       	cpi	r24, 0x25	; 37
 382:	39 f4       	brne	.+14     	; 0x392 <vfprintf+0x74>
 384:	93 fd       	sbrc	r25, 3
 386:	85 91       	lpm	r24, Z+
 388:	93 ff       	sbrs	r25, 3
 38a:	81 91       	ld	r24, Z+
 38c:	7f 01       	movw	r14, r30
 38e:	85 32       	cpi	r24, 0x25	; 37
 390:	21 f4       	brne	.+8      	; 0x39a <vfprintf+0x7c>
 392:	b6 01       	movw	r22, r12
 394:	90 e0       	ldi	r25, 0x00	; 0
 396:	d6 d1       	rcall	.+940    	; 0x744 <fputc>
 398:	e8 cf       	rjmp	.-48     	; 0x36a <vfprintf+0x4c>
 39a:	91 2c       	mov	r9, r1
 39c:	21 2c       	mov	r2, r1
 39e:	31 2c       	mov	r3, r1
 3a0:	ff e1       	ldi	r31, 0x1F	; 31
 3a2:	f3 15       	cp	r31, r3
 3a4:	d8 f0       	brcs	.+54     	; 0x3dc <vfprintf+0xbe>
 3a6:	8b 32       	cpi	r24, 0x2B	; 43
 3a8:	79 f0       	breq	.+30     	; 0x3c8 <vfprintf+0xaa>
 3aa:	38 f4       	brcc	.+14     	; 0x3ba <vfprintf+0x9c>
 3ac:	80 32       	cpi	r24, 0x20	; 32
 3ae:	79 f0       	breq	.+30     	; 0x3ce <vfprintf+0xb0>
 3b0:	83 32       	cpi	r24, 0x23	; 35
 3b2:	a1 f4       	brne	.+40     	; 0x3dc <vfprintf+0xbe>
 3b4:	23 2d       	mov	r18, r3
 3b6:	20 61       	ori	r18, 0x10	; 16
 3b8:	1d c0       	rjmp	.+58     	; 0x3f4 <vfprintf+0xd6>
 3ba:	8d 32       	cpi	r24, 0x2D	; 45
 3bc:	61 f0       	breq	.+24     	; 0x3d6 <vfprintf+0xb8>
 3be:	80 33       	cpi	r24, 0x30	; 48
 3c0:	69 f4       	brne	.+26     	; 0x3dc <vfprintf+0xbe>
 3c2:	23 2d       	mov	r18, r3
 3c4:	21 60       	ori	r18, 0x01	; 1
 3c6:	16 c0       	rjmp	.+44     	; 0x3f4 <vfprintf+0xd6>
 3c8:	83 2d       	mov	r24, r3
 3ca:	82 60       	ori	r24, 0x02	; 2
 3cc:	38 2e       	mov	r3, r24
 3ce:	e3 2d       	mov	r30, r3
 3d0:	e4 60       	ori	r30, 0x04	; 4
 3d2:	3e 2e       	mov	r3, r30
 3d4:	2a c0       	rjmp	.+84     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3d6:	f3 2d       	mov	r31, r3
 3d8:	f8 60       	ori	r31, 0x08	; 8
 3da:	1d c0       	rjmp	.+58     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 3dc:	37 fc       	sbrc	r3, 7
 3de:	2d c0       	rjmp	.+90     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 3e0:	20 ed       	ldi	r18, 0xD0	; 208
 3e2:	28 0f       	add	r18, r24
 3e4:	2a 30       	cpi	r18, 0x0A	; 10
 3e6:	40 f0       	brcs	.+16     	; 0x3f8 <vfprintf+0xda>
 3e8:	8e 32       	cpi	r24, 0x2E	; 46
 3ea:	b9 f4       	brne	.+46     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3ec:	36 fc       	sbrc	r3, 6
 3ee:	75 c1       	rjmp	.+746    	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 3f0:	23 2d       	mov	r18, r3
 3f2:	20 64       	ori	r18, 0x40	; 64
 3f4:	32 2e       	mov	r3, r18
 3f6:	19 c0       	rjmp	.+50     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f8:	36 fe       	sbrs	r3, 6
 3fa:	06 c0       	rjmp	.+12     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fc:	8a e0       	ldi	r24, 0x0A	; 10
 3fe:	98 9e       	mul	r9, r24
 400:	20 0d       	add	r18, r0
 402:	11 24       	eor	r1, r1
 404:	92 2e       	mov	r9, r18
 406:	11 c0       	rjmp	.+34     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 408:	ea e0       	ldi	r30, 0x0A	; 10
 40a:	2e 9e       	mul	r2, r30
 40c:	20 0d       	add	r18, r0
 40e:	11 24       	eor	r1, r1
 410:	22 2e       	mov	r2, r18
 412:	f3 2d       	mov	r31, r3
 414:	f0 62       	ori	r31, 0x20	; 32
 416:	3f 2e       	mov	r3, r31
 418:	08 c0       	rjmp	.+16     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 41a:	8c 36       	cpi	r24, 0x6C	; 108
 41c:	21 f4       	brne	.+8      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41e:	83 2d       	mov	r24, r3
 420:	80 68       	ori	r24, 0x80	; 128
 422:	38 2e       	mov	r3, r24
 424:	02 c0       	rjmp	.+4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 426:	88 36       	cpi	r24, 0x68	; 104
 428:	41 f4       	brne	.+16     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 42a:	f7 01       	movw	r30, r14
 42c:	93 fd       	sbrc	r25, 3
 42e:	85 91       	lpm	r24, Z+
 430:	93 ff       	sbrs	r25, 3
 432:	81 91       	ld	r24, Z+
 434:	7f 01       	movw	r14, r30
 436:	81 11       	cpse	r24, r1
 438:	b3 cf       	rjmp	.-154    	; 0x3a0 <vfprintf+0x82>
 43a:	98 2f       	mov	r25, r24
 43c:	9f 7d       	andi	r25, 0xDF	; 223
 43e:	95 54       	subi	r25, 0x45	; 69
 440:	93 30       	cpi	r25, 0x03	; 3
 442:	28 f4       	brcc	.+10     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 444:	0c 5f       	subi	r16, 0xFC	; 252
 446:	1f 4f       	sbci	r17, 0xFF	; 255
 448:	9f e3       	ldi	r25, 0x3F	; 63
 44a:	99 83       	std	Y+1, r25	; 0x01
 44c:	0d c0       	rjmp	.+26     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 44e:	83 36       	cpi	r24, 0x63	; 99
 450:	31 f0       	breq	.+12     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 452:	83 37       	cpi	r24, 0x73	; 115
 454:	71 f0       	breq	.+28     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 456:	83 35       	cpi	r24, 0x53	; 83
 458:	09 f0       	breq	.+2      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 45a:	55 c0       	rjmp	.+170    	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 45c:	20 c0       	rjmp	.+64     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 45e:	f8 01       	movw	r30, r16
 460:	80 81       	ld	r24, Z
 462:	89 83       	std	Y+1, r24	; 0x01
 464:	0e 5f       	subi	r16, 0xFE	; 254
 466:	1f 4f       	sbci	r17, 0xFF	; 255
 468:	88 24       	eor	r8, r8
 46a:	83 94       	inc	r8
 46c:	91 2c       	mov	r9, r1
 46e:	53 01       	movw	r10, r6
 470:	12 c0       	rjmp	.+36     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 472:	28 01       	movw	r4, r16
 474:	f2 e0       	ldi	r31, 0x02	; 2
 476:	4f 0e       	add	r4, r31
 478:	51 1c       	adc	r5, r1
 47a:	f8 01       	movw	r30, r16
 47c:	a0 80       	ld	r10, Z
 47e:	b1 80       	ldd	r11, Z+1	; 0x01
 480:	36 fe       	sbrs	r3, 6
 482:	03 c0       	rjmp	.+6      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 484:	69 2d       	mov	r22, r9
 486:	70 e0       	ldi	r23, 0x00	; 0
 488:	02 c0       	rjmp	.+4      	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 48a:	6f ef       	ldi	r22, 0xFF	; 255
 48c:	7f ef       	ldi	r23, 0xFF	; 255
 48e:	c5 01       	movw	r24, r10
 490:	4e d1       	rcall	.+668    	; 0x72e <strnlen>
 492:	4c 01       	movw	r8, r24
 494:	82 01       	movw	r16, r4
 496:	f3 2d       	mov	r31, r3
 498:	ff 77       	andi	r31, 0x7F	; 127
 49a:	3f 2e       	mov	r3, r31
 49c:	15 c0       	rjmp	.+42     	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 49e:	28 01       	movw	r4, r16
 4a0:	22 e0       	ldi	r18, 0x02	; 2
 4a2:	42 0e       	add	r4, r18
 4a4:	51 1c       	adc	r5, r1
 4a6:	f8 01       	movw	r30, r16
 4a8:	a0 80       	ld	r10, Z
 4aa:	b1 80       	ldd	r11, Z+1	; 0x01
 4ac:	36 fe       	sbrs	r3, 6
 4ae:	03 c0       	rjmp	.+6      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b0:	69 2d       	mov	r22, r9
 4b2:	70 e0       	ldi	r23, 0x00	; 0
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b6:	6f ef       	ldi	r22, 0xFF	; 255
 4b8:	7f ef       	ldi	r23, 0xFF	; 255
 4ba:	c5 01       	movw	r24, r10
 4bc:	2d d1       	rcall	.+602    	; 0x718 <strnlen_P>
 4be:	4c 01       	movw	r8, r24
 4c0:	f3 2d       	mov	r31, r3
 4c2:	f0 68       	ori	r31, 0x80	; 128
 4c4:	3f 2e       	mov	r3, r31
 4c6:	82 01       	movw	r16, r4
 4c8:	33 fc       	sbrc	r3, 3
 4ca:	19 c0       	rjmp	.+50     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4cc:	82 2d       	mov	r24, r2
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	88 16       	cp	r8, r24
 4d2:	99 06       	cpc	r9, r25
 4d4:	a0 f4       	brcc	.+40     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4d6:	b6 01       	movw	r22, r12
 4d8:	80 e2       	ldi	r24, 0x20	; 32
 4da:	90 e0       	ldi	r25, 0x00	; 0
 4dc:	33 d1       	rcall	.+614    	; 0x744 <fputc>
 4de:	2a 94       	dec	r2
 4e0:	f5 cf       	rjmp	.-22     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4e2:	f5 01       	movw	r30, r10
 4e4:	37 fc       	sbrc	r3, 7
 4e6:	85 91       	lpm	r24, Z+
 4e8:	37 fe       	sbrs	r3, 7
 4ea:	81 91       	ld	r24, Z+
 4ec:	5f 01       	movw	r10, r30
 4ee:	b6 01       	movw	r22, r12
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	28 d1       	rcall	.+592    	; 0x744 <fputc>
 4f4:	21 10       	cpse	r2, r1
 4f6:	2a 94       	dec	r2
 4f8:	21 e0       	ldi	r18, 0x01	; 1
 4fa:	82 1a       	sub	r8, r18
 4fc:	91 08       	sbc	r9, r1
 4fe:	81 14       	cp	r8, r1
 500:	91 04       	cpc	r9, r1
 502:	79 f7       	brne	.-34     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 504:	e1 c0       	rjmp	.+450    	; 0x6c8 <__LOCK_REGION_LENGTH__+0x2c8>
 506:	84 36       	cpi	r24, 0x64	; 100
 508:	11 f0       	breq	.+4      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 50a:	89 36       	cpi	r24, 0x69	; 105
 50c:	39 f5       	brne	.+78     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 50e:	f8 01       	movw	r30, r16
 510:	37 fe       	sbrs	r3, 7
 512:	07 c0       	rjmp	.+14     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 514:	60 81       	ld	r22, Z
 516:	71 81       	ldd	r23, Z+1	; 0x01
 518:	82 81       	ldd	r24, Z+2	; 0x02
 51a:	93 81       	ldd	r25, Z+3	; 0x03
 51c:	0c 5f       	subi	r16, 0xFC	; 252
 51e:	1f 4f       	sbci	r17, 0xFF	; 255
 520:	08 c0       	rjmp	.+16     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 522:	60 81       	ld	r22, Z
 524:	71 81       	ldd	r23, Z+1	; 0x01
 526:	07 2e       	mov	r0, r23
 528:	00 0c       	add	r0, r0
 52a:	88 0b       	sbc	r24, r24
 52c:	99 0b       	sbc	r25, r25
 52e:	0e 5f       	subi	r16, 0xFE	; 254
 530:	1f 4f       	sbci	r17, 0xFF	; 255
 532:	f3 2d       	mov	r31, r3
 534:	ff 76       	andi	r31, 0x6F	; 111
 536:	3f 2e       	mov	r3, r31
 538:	97 ff       	sbrs	r25, 7
 53a:	09 c0       	rjmp	.+18     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 53c:	90 95       	com	r25
 53e:	80 95       	com	r24
 540:	70 95       	com	r23
 542:	61 95       	neg	r22
 544:	7f 4f       	sbci	r23, 0xFF	; 255
 546:	8f 4f       	sbci	r24, 0xFF	; 255
 548:	9f 4f       	sbci	r25, 0xFF	; 255
 54a:	f0 68       	ori	r31, 0x80	; 128
 54c:	3f 2e       	mov	r3, r31
 54e:	2a e0       	ldi	r18, 0x0A	; 10
 550:	30 e0       	ldi	r19, 0x00	; 0
 552:	a3 01       	movw	r20, r6
 554:	33 d1       	rcall	.+614    	; 0x7bc <__ultoa_invert>
 556:	88 2e       	mov	r8, r24
 558:	86 18       	sub	r8, r6
 55a:	44 c0       	rjmp	.+136    	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 55c:	85 37       	cpi	r24, 0x75	; 117
 55e:	31 f4       	brne	.+12     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 560:	23 2d       	mov	r18, r3
 562:	2f 7e       	andi	r18, 0xEF	; 239
 564:	b2 2e       	mov	r11, r18
 566:	2a e0       	ldi	r18, 0x0A	; 10
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	25 c0       	rjmp	.+74     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 56c:	93 2d       	mov	r25, r3
 56e:	99 7f       	andi	r25, 0xF9	; 249
 570:	b9 2e       	mov	r11, r25
 572:	8f 36       	cpi	r24, 0x6F	; 111
 574:	c1 f0       	breq	.+48     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 576:	18 f4       	brcc	.+6      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 578:	88 35       	cpi	r24, 0x58	; 88
 57a:	79 f0       	breq	.+30     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 57c:	ae c0       	rjmp	.+348    	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 57e:	80 37       	cpi	r24, 0x70	; 112
 580:	19 f0       	breq	.+6      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 582:	88 37       	cpi	r24, 0x78	; 120
 584:	21 f0       	breq	.+8      	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 586:	a9 c0       	rjmp	.+338    	; 0x6da <__LOCK_REGION_LENGTH__+0x2da>
 588:	e9 2f       	mov	r30, r25
 58a:	e0 61       	ori	r30, 0x10	; 16
 58c:	be 2e       	mov	r11, r30
 58e:	b4 fe       	sbrs	r11, 4
 590:	0d c0       	rjmp	.+26     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 592:	fb 2d       	mov	r31, r11
 594:	f4 60       	ori	r31, 0x04	; 4
 596:	bf 2e       	mov	r11, r31
 598:	09 c0       	rjmp	.+18     	; 0x5ac <__LOCK_REGION_LENGTH__+0x1ac>
 59a:	34 fe       	sbrs	r3, 4
 59c:	0a c0       	rjmp	.+20     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 59e:	29 2f       	mov	r18, r25
 5a0:	26 60       	ori	r18, 0x06	; 6
 5a2:	b2 2e       	mov	r11, r18
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5a6:	28 e0       	ldi	r18, 0x08	; 8
 5a8:	30 e0       	ldi	r19, 0x00	; 0
 5aa:	05 c0       	rjmp	.+10     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5ac:	20 e1       	ldi	r18, 0x10	; 16
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 5b2:	20 e1       	ldi	r18, 0x10	; 16
 5b4:	32 e0       	ldi	r19, 0x02	; 2
 5b6:	f8 01       	movw	r30, r16
 5b8:	b7 fe       	sbrs	r11, 7
 5ba:	07 c0       	rjmp	.+14     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5bc:	60 81       	ld	r22, Z
 5be:	71 81       	ldd	r23, Z+1	; 0x01
 5c0:	82 81       	ldd	r24, Z+2	; 0x02
 5c2:	93 81       	ldd	r25, Z+3	; 0x03
 5c4:	0c 5f       	subi	r16, 0xFC	; 252
 5c6:	1f 4f       	sbci	r17, 0xFF	; 255
 5c8:	06 c0       	rjmp	.+12     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5ca:	60 81       	ld	r22, Z
 5cc:	71 81       	ldd	r23, Z+1	; 0x01
 5ce:	80 e0       	ldi	r24, 0x00	; 0
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	0e 5f       	subi	r16, 0xFE	; 254
 5d4:	1f 4f       	sbci	r17, 0xFF	; 255
 5d6:	a3 01       	movw	r20, r6
 5d8:	f1 d0       	rcall	.+482    	; 0x7bc <__ultoa_invert>
 5da:	88 2e       	mov	r8, r24
 5dc:	86 18       	sub	r8, r6
 5de:	fb 2d       	mov	r31, r11
 5e0:	ff 77       	andi	r31, 0x7F	; 127
 5e2:	3f 2e       	mov	r3, r31
 5e4:	36 fe       	sbrs	r3, 6
 5e6:	0d c0       	rjmp	.+26     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5e8:	23 2d       	mov	r18, r3
 5ea:	2e 7f       	andi	r18, 0xFE	; 254
 5ec:	a2 2e       	mov	r10, r18
 5ee:	89 14       	cp	r8, r9
 5f0:	58 f4       	brcc	.+22     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5f2:	34 fe       	sbrs	r3, 4
 5f4:	0b c0       	rjmp	.+22     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5f6:	32 fc       	sbrc	r3, 2
 5f8:	09 c0       	rjmp	.+18     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5fa:	83 2d       	mov	r24, r3
 5fc:	8e 7e       	andi	r24, 0xEE	; 238
 5fe:	a8 2e       	mov	r10, r24
 600:	05 c0       	rjmp	.+10     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 602:	b8 2c       	mov	r11, r8
 604:	a3 2c       	mov	r10, r3
 606:	03 c0       	rjmp	.+6      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 608:	b8 2c       	mov	r11, r8
 60a:	01 c0       	rjmp	.+2      	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 60c:	b9 2c       	mov	r11, r9
 60e:	a4 fe       	sbrs	r10, 4
 610:	0f c0       	rjmp	.+30     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 612:	fe 01       	movw	r30, r28
 614:	e8 0d       	add	r30, r8
 616:	f1 1d       	adc	r31, r1
 618:	80 81       	ld	r24, Z
 61a:	80 33       	cpi	r24, 0x30	; 48
 61c:	21 f4       	brne	.+8      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 61e:	9a 2d       	mov	r25, r10
 620:	99 7e       	andi	r25, 0xE9	; 233
 622:	a9 2e       	mov	r10, r25
 624:	09 c0       	rjmp	.+18     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 626:	a2 fe       	sbrs	r10, 2
 628:	06 c0       	rjmp	.+12     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 62a:	b3 94       	inc	r11
 62c:	b3 94       	inc	r11
 62e:	04 c0       	rjmp	.+8      	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 630:	8a 2d       	mov	r24, r10
 632:	86 78       	andi	r24, 0x86	; 134
 634:	09 f0       	breq	.+2      	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 636:	b3 94       	inc	r11
 638:	a3 fc       	sbrc	r10, 3
 63a:	10 c0       	rjmp	.+32     	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 63c:	a0 fe       	sbrs	r10, 0
 63e:	06 c0       	rjmp	.+12     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 640:	b2 14       	cp	r11, r2
 642:	80 f4       	brcc	.+32     	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 644:	28 0c       	add	r2, r8
 646:	92 2c       	mov	r9, r2
 648:	9b 18       	sub	r9, r11
 64a:	0d c0       	rjmp	.+26     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 64c:	b2 14       	cp	r11, r2
 64e:	58 f4       	brcc	.+22     	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 650:	b6 01       	movw	r22, r12
 652:	80 e2       	ldi	r24, 0x20	; 32
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	76 d0       	rcall	.+236    	; 0x744 <fputc>
 658:	b3 94       	inc	r11
 65a:	f8 cf       	rjmp	.-16     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 65c:	b2 14       	cp	r11, r2
 65e:	18 f4       	brcc	.+6      	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 660:	2b 18       	sub	r2, r11
 662:	02 c0       	rjmp	.+4      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 664:	98 2c       	mov	r9, r8
 666:	21 2c       	mov	r2, r1
 668:	a4 fe       	sbrs	r10, 4
 66a:	0f c0       	rjmp	.+30     	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 66c:	b6 01       	movw	r22, r12
 66e:	80 e3       	ldi	r24, 0x30	; 48
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	68 d0       	rcall	.+208    	; 0x744 <fputc>
 674:	a2 fe       	sbrs	r10, 2
 676:	16 c0       	rjmp	.+44     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 678:	a1 fc       	sbrc	r10, 1
 67a:	03 c0       	rjmp	.+6      	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 67c:	88 e7       	ldi	r24, 0x78	; 120
 67e:	90 e0       	ldi	r25, 0x00	; 0
 680:	02 c0       	rjmp	.+4      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 682:	88 e5       	ldi	r24, 0x58	; 88
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	b6 01       	movw	r22, r12
 688:	0c c0       	rjmp	.+24     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 68a:	8a 2d       	mov	r24, r10
 68c:	86 78       	andi	r24, 0x86	; 134
 68e:	51 f0       	breq	.+20     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 690:	a1 fe       	sbrs	r10, 1
 692:	02 c0       	rjmp	.+4      	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 694:	8b e2       	ldi	r24, 0x2B	; 43
 696:	01 c0       	rjmp	.+2      	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 698:	80 e2       	ldi	r24, 0x20	; 32
 69a:	a7 fc       	sbrc	r10, 7
 69c:	8d e2       	ldi	r24, 0x2D	; 45
 69e:	b6 01       	movw	r22, r12
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	50 d0       	rcall	.+160    	; 0x744 <fputc>
 6a4:	89 14       	cp	r8, r9
 6a6:	30 f4       	brcc	.+12     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6a8:	b6 01       	movw	r22, r12
 6aa:	80 e3       	ldi	r24, 0x30	; 48
 6ac:	90 e0       	ldi	r25, 0x00	; 0
 6ae:	4a d0       	rcall	.+148    	; 0x744 <fputc>
 6b0:	9a 94       	dec	r9
 6b2:	f8 cf       	rjmp	.-16     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 6b4:	8a 94       	dec	r8
 6b6:	f3 01       	movw	r30, r6
 6b8:	e8 0d       	add	r30, r8
 6ba:	f1 1d       	adc	r31, r1
 6bc:	80 81       	ld	r24, Z
 6be:	b6 01       	movw	r22, r12
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	40 d0       	rcall	.+128    	; 0x744 <fputc>
 6c4:	81 10       	cpse	r8, r1
 6c6:	f6 cf       	rjmp	.-20     	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6c8:	22 20       	and	r2, r2
 6ca:	09 f4       	brne	.+2      	; 0x6ce <__LOCK_REGION_LENGTH__+0x2ce>
 6cc:	4e ce       	rjmp	.-868    	; 0x36a <vfprintf+0x4c>
 6ce:	b6 01       	movw	r22, r12
 6d0:	80 e2       	ldi	r24, 0x20	; 32
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	37 d0       	rcall	.+110    	; 0x744 <fputc>
 6d6:	2a 94       	dec	r2
 6d8:	f7 cf       	rjmp	.-18     	; 0x6c8 <__LOCK_REGION_LENGTH__+0x2c8>
 6da:	f6 01       	movw	r30, r12
 6dc:	86 81       	ldd	r24, Z+6	; 0x06
 6de:	97 81       	ldd	r25, Z+7	; 0x07
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6e2:	8f ef       	ldi	r24, 0xFF	; 255
 6e4:	9f ef       	ldi	r25, 0xFF	; 255
 6e6:	2b 96       	adiw	r28, 0x0b	; 11
 6e8:	0f b6       	in	r0, 0x3f	; 63
 6ea:	f8 94       	cli
 6ec:	de bf       	out	0x3e, r29	; 62
 6ee:	0f be       	out	0x3f, r0	; 63
 6f0:	cd bf       	out	0x3d, r28	; 61
 6f2:	df 91       	pop	r29
 6f4:	cf 91       	pop	r28
 6f6:	1f 91       	pop	r17
 6f8:	0f 91       	pop	r16
 6fa:	ff 90       	pop	r15
 6fc:	ef 90       	pop	r14
 6fe:	df 90       	pop	r13
 700:	cf 90       	pop	r12
 702:	bf 90       	pop	r11
 704:	af 90       	pop	r10
 706:	9f 90       	pop	r9
 708:	8f 90       	pop	r8
 70a:	7f 90       	pop	r7
 70c:	6f 90       	pop	r6
 70e:	5f 90       	pop	r5
 710:	4f 90       	pop	r4
 712:	3f 90       	pop	r3
 714:	2f 90       	pop	r2
 716:	08 95       	ret

00000718 <strnlen_P>:
 718:	fc 01       	movw	r30, r24
 71a:	05 90       	lpm	r0, Z+
 71c:	61 50       	subi	r22, 0x01	; 1
 71e:	70 40       	sbci	r23, 0x00	; 0
 720:	01 10       	cpse	r0, r1
 722:	d8 f7       	brcc	.-10     	; 0x71a <strnlen_P+0x2>
 724:	80 95       	com	r24
 726:	90 95       	com	r25
 728:	8e 0f       	add	r24, r30
 72a:	9f 1f       	adc	r25, r31
 72c:	08 95       	ret

0000072e <strnlen>:
 72e:	fc 01       	movw	r30, r24
 730:	61 50       	subi	r22, 0x01	; 1
 732:	70 40       	sbci	r23, 0x00	; 0
 734:	01 90       	ld	r0, Z+
 736:	01 10       	cpse	r0, r1
 738:	d8 f7       	brcc	.-10     	; 0x730 <strnlen+0x2>
 73a:	80 95       	com	r24
 73c:	90 95       	com	r25
 73e:	8e 0f       	add	r24, r30
 740:	9f 1f       	adc	r25, r31
 742:	08 95       	ret

00000744 <fputc>:
 744:	0f 93       	push	r16
 746:	1f 93       	push	r17
 748:	cf 93       	push	r28
 74a:	df 93       	push	r29
 74c:	fb 01       	movw	r30, r22
 74e:	23 81       	ldd	r18, Z+3	; 0x03
 750:	21 fd       	sbrc	r18, 1
 752:	03 c0       	rjmp	.+6      	; 0x75a <fputc+0x16>
 754:	8f ef       	ldi	r24, 0xFF	; 255
 756:	9f ef       	ldi	r25, 0xFF	; 255
 758:	2c c0       	rjmp	.+88     	; 0x7b2 <fputc+0x6e>
 75a:	22 ff       	sbrs	r18, 2
 75c:	16 c0       	rjmp	.+44     	; 0x78a <fputc+0x46>
 75e:	46 81       	ldd	r20, Z+6	; 0x06
 760:	57 81       	ldd	r21, Z+7	; 0x07
 762:	24 81       	ldd	r18, Z+4	; 0x04
 764:	35 81       	ldd	r19, Z+5	; 0x05
 766:	42 17       	cp	r20, r18
 768:	53 07       	cpc	r21, r19
 76a:	44 f4       	brge	.+16     	; 0x77c <fputc+0x38>
 76c:	a0 81       	ld	r26, Z
 76e:	b1 81       	ldd	r27, Z+1	; 0x01
 770:	9d 01       	movw	r18, r26
 772:	2f 5f       	subi	r18, 0xFF	; 255
 774:	3f 4f       	sbci	r19, 0xFF	; 255
 776:	31 83       	std	Z+1, r19	; 0x01
 778:	20 83       	st	Z, r18
 77a:	8c 93       	st	X, r24
 77c:	26 81       	ldd	r18, Z+6	; 0x06
 77e:	37 81       	ldd	r19, Z+7	; 0x07
 780:	2f 5f       	subi	r18, 0xFF	; 255
 782:	3f 4f       	sbci	r19, 0xFF	; 255
 784:	37 83       	std	Z+7, r19	; 0x07
 786:	26 83       	std	Z+6, r18	; 0x06
 788:	14 c0       	rjmp	.+40     	; 0x7b2 <fputc+0x6e>
 78a:	8b 01       	movw	r16, r22
 78c:	ec 01       	movw	r28, r24
 78e:	fb 01       	movw	r30, r22
 790:	00 84       	ldd	r0, Z+8	; 0x08
 792:	f1 85       	ldd	r31, Z+9	; 0x09
 794:	e0 2d       	mov	r30, r0
 796:	09 95       	icall
 798:	89 2b       	or	r24, r25
 79a:	e1 f6       	brne	.-72     	; 0x754 <fputc+0x10>
 79c:	d8 01       	movw	r26, r16
 79e:	16 96       	adiw	r26, 0x06	; 6
 7a0:	8d 91       	ld	r24, X+
 7a2:	9c 91       	ld	r25, X
 7a4:	17 97       	sbiw	r26, 0x07	; 7
 7a6:	01 96       	adiw	r24, 0x01	; 1
 7a8:	17 96       	adiw	r26, 0x07	; 7
 7aa:	9c 93       	st	X, r25
 7ac:	8e 93       	st	-X, r24
 7ae:	16 97       	sbiw	r26, 0x06	; 6
 7b0:	ce 01       	movw	r24, r28
 7b2:	df 91       	pop	r29
 7b4:	cf 91       	pop	r28
 7b6:	1f 91       	pop	r17
 7b8:	0f 91       	pop	r16
 7ba:	08 95       	ret

000007bc <__ultoa_invert>:
 7bc:	fa 01       	movw	r30, r20
 7be:	aa 27       	eor	r26, r26
 7c0:	28 30       	cpi	r18, 0x08	; 8
 7c2:	51 f1       	breq	.+84     	; 0x818 <__ultoa_invert+0x5c>
 7c4:	20 31       	cpi	r18, 0x10	; 16
 7c6:	81 f1       	breq	.+96     	; 0x828 <__ultoa_invert+0x6c>
 7c8:	e8 94       	clt
 7ca:	6f 93       	push	r22
 7cc:	6e 7f       	andi	r22, 0xFE	; 254
 7ce:	6e 5f       	subi	r22, 0xFE	; 254
 7d0:	7f 4f       	sbci	r23, 0xFF	; 255
 7d2:	8f 4f       	sbci	r24, 0xFF	; 255
 7d4:	9f 4f       	sbci	r25, 0xFF	; 255
 7d6:	af 4f       	sbci	r26, 0xFF	; 255
 7d8:	b1 e0       	ldi	r27, 0x01	; 1
 7da:	3e d0       	rcall	.+124    	; 0x858 <__ultoa_invert+0x9c>
 7dc:	b4 e0       	ldi	r27, 0x04	; 4
 7de:	3c d0       	rcall	.+120    	; 0x858 <__ultoa_invert+0x9c>
 7e0:	67 0f       	add	r22, r23
 7e2:	78 1f       	adc	r23, r24
 7e4:	89 1f       	adc	r24, r25
 7e6:	9a 1f       	adc	r25, r26
 7e8:	a1 1d       	adc	r26, r1
 7ea:	68 0f       	add	r22, r24
 7ec:	79 1f       	adc	r23, r25
 7ee:	8a 1f       	adc	r24, r26
 7f0:	91 1d       	adc	r25, r1
 7f2:	a1 1d       	adc	r26, r1
 7f4:	6a 0f       	add	r22, r26
 7f6:	71 1d       	adc	r23, r1
 7f8:	81 1d       	adc	r24, r1
 7fa:	91 1d       	adc	r25, r1
 7fc:	a1 1d       	adc	r26, r1
 7fe:	20 d0       	rcall	.+64     	; 0x840 <__ultoa_invert+0x84>
 800:	09 f4       	brne	.+2      	; 0x804 <__ultoa_invert+0x48>
 802:	68 94       	set
 804:	3f 91       	pop	r19
 806:	2a e0       	ldi	r18, 0x0A	; 10
 808:	26 9f       	mul	r18, r22
 80a:	11 24       	eor	r1, r1
 80c:	30 19       	sub	r19, r0
 80e:	30 5d       	subi	r19, 0xD0	; 208
 810:	31 93       	st	Z+, r19
 812:	de f6       	brtc	.-74     	; 0x7ca <__ultoa_invert+0xe>
 814:	cf 01       	movw	r24, r30
 816:	08 95       	ret
 818:	46 2f       	mov	r20, r22
 81a:	47 70       	andi	r20, 0x07	; 7
 81c:	40 5d       	subi	r20, 0xD0	; 208
 81e:	41 93       	st	Z+, r20
 820:	b3 e0       	ldi	r27, 0x03	; 3
 822:	0f d0       	rcall	.+30     	; 0x842 <__ultoa_invert+0x86>
 824:	c9 f7       	brne	.-14     	; 0x818 <__ultoa_invert+0x5c>
 826:	f6 cf       	rjmp	.-20     	; 0x814 <__ultoa_invert+0x58>
 828:	46 2f       	mov	r20, r22
 82a:	4f 70       	andi	r20, 0x0F	; 15
 82c:	40 5d       	subi	r20, 0xD0	; 208
 82e:	4a 33       	cpi	r20, 0x3A	; 58
 830:	18 f0       	brcs	.+6      	; 0x838 <__ultoa_invert+0x7c>
 832:	49 5d       	subi	r20, 0xD9	; 217
 834:	31 fd       	sbrc	r19, 1
 836:	40 52       	subi	r20, 0x20	; 32
 838:	41 93       	st	Z+, r20
 83a:	02 d0       	rcall	.+4      	; 0x840 <__ultoa_invert+0x84>
 83c:	a9 f7       	brne	.-22     	; 0x828 <__ultoa_invert+0x6c>
 83e:	ea cf       	rjmp	.-44     	; 0x814 <__ultoa_invert+0x58>
 840:	b4 e0       	ldi	r27, 0x04	; 4
 842:	a6 95       	lsr	r26
 844:	97 95       	ror	r25
 846:	87 95       	ror	r24
 848:	77 95       	ror	r23
 84a:	67 95       	ror	r22
 84c:	ba 95       	dec	r27
 84e:	c9 f7       	brne	.-14     	; 0x842 <__ultoa_invert+0x86>
 850:	00 97       	sbiw	r24, 0x00	; 0
 852:	61 05       	cpc	r22, r1
 854:	71 05       	cpc	r23, r1
 856:	08 95       	ret
 858:	9b 01       	movw	r18, r22
 85a:	ac 01       	movw	r20, r24
 85c:	0a 2e       	mov	r0, r26
 85e:	06 94       	lsr	r0
 860:	57 95       	ror	r21
 862:	47 95       	ror	r20
 864:	37 95       	ror	r19
 866:	27 95       	ror	r18
 868:	ba 95       	dec	r27
 86a:	c9 f7       	brne	.-14     	; 0x85e <__ultoa_invert+0xa2>
 86c:	62 0f       	add	r22, r18
 86e:	73 1f       	adc	r23, r19
 870:	84 1f       	adc	r24, r20
 872:	95 1f       	adc	r25, r21
 874:	a0 1d       	adc	r26, r0
 876:	08 95       	ret

00000878 <_exit>:
 878:	f8 94       	cli

0000087a <__stop_program>:
 87a:	ff cf       	rjmp	.-2      	; 0x87a <__stop_program>
